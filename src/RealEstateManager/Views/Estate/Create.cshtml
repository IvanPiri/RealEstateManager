@using RealEstateManager.Utils
@using RealEstateManager.Models.Data;
@model RealEstateManager.Models.Estate.EstateCreationModel

@{
    ViewBag.Title = Localization.GetString("EstateCreationPage_Title");
}

@Html.ValidationSummary(true, null, new { @class = "text-danger" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h3>@Localization.GetString("EstateCreationPage_Header")</h3>
        </div>
        <div class="card-body bg-light">
            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Address)
                @Html.EditorFor(x => x.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Address, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Type)
                @Html.DropDownListFor(x => x.Type, CustomEnumHelper.ToSelectList<EstateType>(), new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Type, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Area)
                @Html.EditorFor(x => x.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Area, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Price)
                @Html.EditorFor(x => x.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PrivateDescription)
                @Html.EditorFor(x => x.PrivateDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.PrivateDescription, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PublicDescription)
                @Html.EditorFor(x => x.PublicDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.PublicDescription, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Status)
                @Html.DropDownListFor(x => x.Status, CustomEnumHelper.ToSelectList<EstateStatusType>(), new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Status, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">@Localization.GetString("Button_Create")</button>
            </div>
        </div>
    </div>
}
